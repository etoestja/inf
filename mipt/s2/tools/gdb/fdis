
rat:     file format elf32-i386


Disassembly of section .interp:

08048134 <.interp>:
 8048134:	2f                   	das    
 8048135:	6c                   	ins    BYTE PTR es:[edi],dx
 8048136:	69 62 2f 6c 64 2d 6c 	imul   esp,DWORD PTR [edx+0x2f],0x6c2d646c
 804813d:	69 6e 75 78 2e 73 6f 	imul   ebp,DWORD PTR [esi+0x75],0x6f732e78
 8048144:	2e 32 00             	xor    al,BYTE PTR cs:[eax]

Disassembly of section .note.ABI-tag:

08048148 <.note.ABI-tag>:
 8048148:	04 00                	add    al,0x0
 804814a:	00 00                	add    BYTE PTR [eax],al
 804814c:	10 00                	adc    BYTE PTR [eax],al
 804814e:	00 00                	add    BYTE PTR [eax],al
 8048150:	01 00                	add    DWORD PTR [eax],eax
 8048152:	00 00                	add    BYTE PTR [eax],al
 8048154:	47                   	inc    edi
 8048155:	4e                   	dec    esi
 8048156:	55                   	push   ebp
 8048157:	00 00                	add    BYTE PTR [eax],al
 8048159:	00 00                	add    BYTE PTR [eax],al
 804815b:	00 02                	add    BYTE PTR [edx],al
 804815d:	00 00                	add    BYTE PTR [eax],al
 804815f:	00 06                	add    BYTE PTR [esi],al
 8048161:	00 00                	add    BYTE PTR [eax],al
 8048163:	00 20                	add    BYTE PTR [eax],ah
 8048165:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .note.gnu.build-id:

08048168 <.note.gnu.build-id>:
 8048168:	04 00                	add    al,0x0
 804816a:	00 00                	add    BYTE PTR [eax],al
 804816c:	14 00                	adc    al,0x0
 804816e:	00 00                	add    BYTE PTR [eax],al
 8048170:	03 00                	add    eax,DWORD PTR [eax]
 8048172:	00 00                	add    BYTE PTR [eax],al
 8048174:	47                   	inc    edi
 8048175:	4e                   	dec    esi
 8048176:	55                   	push   ebp
 8048177:	00 45 bb             	add    BYTE PTR [ebp-0x45],al
 804817a:	ea 94 0a c8 50 8e 7f 	jmp    0x7f8e:0x50c80a94
 8048181:	83 4e 50 a6          	or     DWORD PTR [esi+0x50],0xffffffa6
 8048185:	e1 dc                	loope  8048163 <_init-0x171>
 8048187:	f7 d0                	not    eax
 8048189:	56                   	push   esi
 804818a:	d7                   	xlat   BYTE PTR ds:[ebx]
 804818b:	01                   	.byte 0x1

Disassembly of section .gnu.hash:

0804818c <.gnu.hash>:
 804818c:	02 00                	add    al,BYTE PTR [eax]
 804818e:	00 00                	add    BYTE PTR [eax],al
 8048190:	06                   	push   es
 8048191:	00 00                	add    BYTE PTR [eax],al
 8048193:	00 01                	add    BYTE PTR [ecx],al
 8048195:	00 00                	add    BYTE PTR [eax],al
 8048197:	00 05 00 00 00 00    	add    BYTE PTR ds:0x0,al
 804819d:	20 00                	and    BYTE PTR [eax],al
 804819f:	20 00                	and    BYTE PTR [eax],al
 80481a1:	00 00                	add    BYTE PTR [eax],al
 80481a3:	00 06                	add    BYTE PTR [esi],al
 80481a5:	00 00                	add    BYTE PTR [eax],al
 80481a7:	00                   	.byte 0x0
 80481a8:	ad                   	lods   eax,DWORD PTR ds:[esi]
 80481a9:	4b                   	dec    ebx
 80481aa:	e3 c0                	jecxz  804816c <_init-0x168>

Disassembly of section .dynsym:

080481ac <.dynsym>:
	...
 80481bc:	2e 00 00             	add    BYTE PTR cs:[eax],al
	...
 80481c7:	00 12                	add    BYTE PTR [edx],dl
 80481c9:	00 00                	add    BYTE PTR [eax],al
 80481cb:	00 35 00 00 00 00    	add    BYTE PTR ds:0x0,dh
 80481d1:	00 00                	add    BYTE PTR [eax],al
 80481d3:	00 00                	add    BYTE PTR [eax],al
 80481d5:	00 00                	add    BYTE PTR [eax],al
 80481d7:	00 12                	add    BYTE PTR [edx],dl
 80481d9:	00 00                	add    BYTE PTR [eax],al
 80481db:	00 01                	add    BYTE PTR [ecx],al
	...
 80481e5:	00 00                	add    BYTE PTR [eax],al
 80481e7:	00 20                	add    BYTE PTR [eax],ah
 80481e9:	00 00                	add    BYTE PTR [eax],al
 80481eb:	00 29                	add    BYTE PTR [ecx],ch
	...
 80481f5:	00 00                	add    BYTE PTR [eax],al
 80481f7:	00 12                	add    BYTE PTR [edx],dl
 80481f9:	00 00                	add    BYTE PTR [eax],al
 80481fb:	00 3b                	add    BYTE PTR [ebx],bh
	...
 8048205:	00 00                	add    BYTE PTR [eax],al
 8048207:	00 12                	add    BYTE PTR [edx],dl
 8048209:	00 00                	add    BYTE PTR [eax],al
 804820b:	00 1a                	add    BYTE PTR [edx],bl
 804820d:	00 00                	add    BYTE PTR [eax],al
 804820f:	00 2c 85 04 08 04 00 	add    BYTE PTR [eax*4+0x40804],ch
 8048216:	00 00                	add    BYTE PTR [eax],al
 8048218:	11 00                	adc    DWORD PTR [eax],eax
 804821a:	0f                   	.byte 0xf
	...

Disassembly of section .dynstr:

0804821c <.dynstr>:
 804821c:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 804821f:	67 6d                	ins    DWORD PTR es:[di],dx
 8048221:	6f                   	outs   dx,DWORD PTR ds:[esi]
 8048222:	6e                   	outs   dx,BYTE PTR ds:[esi]
 8048223:	5f                   	pop    edi
 8048224:	73 74                	jae    804829a <_init-0x3a>
 8048226:	61                   	popa   
 8048227:	72 74                	jb     804829d <_init-0x37>
 8048229:	5f                   	pop    edi
 804822a:	5f                   	pop    edi
 804822b:	00 6c 69 62          	add    BYTE PTR [ecx+ebp*2+0x62],ch
 804822f:	63 2e                	arpl   WORD PTR [esi],bp
 8048231:	73 6f                	jae    80482a2 <_init-0x32>
 8048233:	2e 36 00 5f 49       	cs add BYTE PTR cs:ss:[edi+0x49],bl
 8048238:	4f                   	dec    edi
 8048239:	5f                   	pop    edi
 804823a:	73 74                	jae    80482b0 <_init-0x24>
 804823c:	64 69 6e 5f 75 73 65 	imul   ebp,DWORD PTR fs:[esi+0x5f],0x64657375
 8048243:	64 
 8048244:	00 65 78             	add    BYTE PTR [ebp+0x78],ah
 8048247:	69 74 00 70 72 69 6e 	imul   esi,DWORD PTR [eax+eax*1+0x70],0x746e6972
 804824e:	74 
 804824f:	66                   	data16
 8048250:	00 73 63             	add    BYTE PTR [ebx+0x63],dh
 8048253:	61                   	popa   
 8048254:	6e                   	outs   dx,BYTE PTR ds:[esi]
 8048255:	66                   	data16
 8048256:	00 5f 5f             	add    BYTE PTR [edi+0x5f],bl
 8048259:	6c                   	ins    BYTE PTR es:[edi],dx
 804825a:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [edx+0x63],0x6174735f
 8048261:	72 74                	jb     80482d7 <_init+0x3>
 8048263:	5f                   	pop    edi
 8048264:	6d                   	ins    DWORD PTR es:[edi],dx
 8048265:	61                   	popa   
 8048266:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [esi+0x0],0x42494c47
 804826d:	43                   	inc    ebx
 804826e:	5f                   	pop    edi
 804826f:	32 2e                	xor    ch,BYTE PTR [esi]
 8048271:	30 00                	xor    BYTE PTR [eax],al

Disassembly of section .gnu.version:

08048274 <.gnu.version>:
 8048274:	00 00                	add    BYTE PTR [eax],al
 8048276:	02 00                	add    al,BYTE PTR [eax]
 8048278:	02 00                	add    al,BYTE PTR [eax]
 804827a:	00 00                	add    BYTE PTR [eax],al
 804827c:	02 00                	add    al,BYTE PTR [eax]
 804827e:	02 00                	add    al,BYTE PTR [eax]
 8048280:	01 00                	add    DWORD PTR [eax],eax

Disassembly of section .gnu.version_r:

08048284 <.gnu.version_r>:
 8048284:	01 00                	add    DWORD PTR [eax],eax
 8048286:	01 00                	add    DWORD PTR [eax],eax
 8048288:	10 00                	adc    BYTE PTR [eax],al
 804828a:	00 00                	add    BYTE PTR [eax],al
 804828c:	10 00                	adc    BYTE PTR [eax],al
 804828e:	00 00                	add    BYTE PTR [eax],al
 8048290:	00 00                	add    BYTE PTR [eax],al
 8048292:	00 00                	add    BYTE PTR [eax],al
 8048294:	10 69 69             	adc    BYTE PTR [ecx+0x69],ch
 8048297:	0d 00 00 02 00       	or     eax,0x20000
 804829c:	4d                   	dec    ebp
 804829d:	00 00                	add    BYTE PTR [eax],al
 804829f:	00 00                	add    BYTE PTR [eax],al
 80482a1:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .rel.dyn:

080482a4 <.rel.dyn>:
 80482a4:	dc 96 04 08 06 03    	fcom   QWORD PTR [esi+0x3060804]
	...

Disassembly of section .rel.plt:

080482ac <.rel.plt>:
 80482ac:	ec                   	in     al,dx
 80482ad:	96                   	xchg   esi,eax
 80482ae:	04 08                	add    al,0x8
 80482b0:	07                   	pop    es
 80482b1:	01 00                	add    DWORD PTR [eax],eax
 80482b3:	00 f0                	add    al,dh
 80482b5:	96                   	xchg   esi,eax
 80482b6:	04 08                	add    al,0x8
 80482b8:	07                   	pop    es
 80482b9:	02 00                	add    al,BYTE PTR [eax]
 80482bb:	00 f4                	add    ah,dh
 80482bd:	96                   	xchg   esi,eax
 80482be:	04 08                	add    al,0x8
 80482c0:	07                   	pop    es
 80482c1:	03 00                	add    eax,DWORD PTR [eax]
 80482c3:	00 f8                	add    al,bh
 80482c5:	96                   	xchg   esi,eax
 80482c6:	04 08                	add    al,0x8
 80482c8:	07                   	pop    es
 80482c9:	04 00                	add    al,0x0
 80482cb:	00 fc                	add    ah,bh
 80482cd:	96                   	xchg   esi,eax
 80482ce:	04 08                	add    al,0x8
 80482d0:	07                   	pop    es
 80482d1:	05                   	.byte 0x5
	...

Disassembly of section .init:

080482d4 <_init>:
 80482d4:	53                   	push   ebx
 80482d5:	83 ec 08             	sub    esp,0x8
 80482d8:	e8 a7 00 00 00       	call   8048384 <__x86.get_pc_thunk.bx>
 80482dd:	81 c3 03 14 00 00    	add    ebx,0x1403
 80482e3:	8b 83 fc ff ff ff    	mov    eax,DWORD PTR [ebx-0x4]
 80482e9:	85 c0                	test   eax,eax
 80482eb:	74 05                	je     80482f2 <_init+0x1e>
 80482ed:	e8 3e 00 00 00       	call   8048330 <__gmon_start__@plt>
 80482f2:	83 c4 08             	add    esp,0x8
 80482f5:	5b                   	pop    ebx
 80482f6:	c3                   	ret    

Disassembly of section .plt:

08048300 <printf@plt-0x10>:
 8048300:	ff 35 e4 96 04 08    	push   DWORD PTR ds:0x80496e4
 8048306:	ff 25 e8 96 04 08    	jmp    DWORD PTR ds:0x80496e8
 804830c:	00 00                	add    BYTE PTR [eax],al
	...

08048310 <printf@plt>:
 8048310:	ff 25 ec 96 04 08    	jmp    DWORD PTR ds:0x80496ec
 8048316:	68 00 00 00 00       	push   0x0
 804831b:	e9 e0 ff ff ff       	jmp    8048300 <_init+0x2c>

08048320 <scanf@plt>:
 8048320:	ff 25 f0 96 04 08    	jmp    DWORD PTR ds:0x80496f0
 8048326:	68 08 00 00 00       	push   0x8
 804832b:	e9 d0 ff ff ff       	jmp    8048300 <_init+0x2c>

08048330 <__gmon_start__@plt>:
 8048330:	ff 25 f4 96 04 08    	jmp    DWORD PTR ds:0x80496f4
 8048336:	68 10 00 00 00       	push   0x10
 804833b:	e9 c0 ff ff ff       	jmp    8048300 <_init+0x2c>

08048340 <exit@plt>:
 8048340:	ff 25 f8 96 04 08    	jmp    DWORD PTR ds:0x80496f8
 8048346:	68 18 00 00 00       	push   0x18
 804834b:	e9 b0 ff ff ff       	jmp    8048300 <_init+0x2c>

08048350 <__libc_start_main@plt>:
 8048350:	ff 25 fc 96 04 08    	jmp    DWORD PTR ds:0x80496fc
 8048356:	68 20 00 00 00       	push   0x20
 804835b:	e9 a0 ff ff ff       	jmp    8048300 <_init+0x2c>

Disassembly of section .text:

08048360 <_start>:
 8048360:	31 ed                	xor    ebp,ebp
 8048362:	5e                   	pop    esi
 8048363:	89 e1                	mov    ecx,esp
 8048365:	83 e4 f0             	and    esp,0xfffffff0
 8048368:	50                   	push   eax
 8048369:	54                   	push   esp
 804836a:	52                   	push   edx
 804836b:	68 10 85 04 08       	push   0x8048510
 8048370:	68 a0 84 04 08       	push   0x80484a0
 8048375:	51                   	push   ecx
 8048376:	56                   	push   esi
 8048377:	68 50 84 04 08       	push   0x8048450
 804837c:	e8 cf ff ff ff       	call   8048350 <__libc_start_main@plt>
 8048381:	f4                   	hlt    
 8048382:	66 90                	xchg   ax,ax

08048384 <__x86.get_pc_thunk.bx>:
 8048384:	8b 1c 24             	mov    ebx,DWORD PTR [esp]
 8048387:	c3                   	ret    
 8048388:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [eax+eax*1+0x0]
 804838f:	00 

08048390 <deregister_tm_clones>:
 8048390:	b8 2b 97 04 08       	mov    eax,0x804972b
 8048395:	2d 28 97 04 08       	sub    eax,0x8049728
 804839a:	83 f8 06             	cmp    eax,0x6
 804839d:	77 02                	ja     80483a1 <deregister_tm_clones+0x11>
 804839f:	f3 c3                	repz ret 
 80483a1:	b8 00 00 00 00       	mov    eax,0x0
 80483a6:	85 c0                	test   eax,eax
 80483a8:	74 f5                	je     804839f <deregister_tm_clones+0xf>
 80483aa:	55                   	push   ebp
 80483ab:	89 e5                	mov    ebp,esp
 80483ad:	83 ec 18             	sub    esp,0x18
 80483b0:	c7 04 24 28 97 04 08 	mov    DWORD PTR [esp],0x8049728
 80483b7:	ff d0                	call   eax
 80483b9:	c9                   	leave  
 80483ba:	c3                   	ret    
 80483bb:	90                   	nop
 80483bc:	8d 74 26 00          	lea    esi,[esi+eiz*1+0x0]

080483c0 <register_tm_clones>:
 80483c0:	b8 28 97 04 08       	mov    eax,0x8049728
 80483c5:	2d 28 97 04 08       	sub    eax,0x8049728
 80483ca:	c1 f8 02             	sar    eax,0x2
 80483cd:	89 c2                	mov    edx,eax
 80483cf:	c1 ea 1f             	shr    edx,0x1f
 80483d2:	01 d0                	add    eax,edx
 80483d4:	d1 f8                	sar    eax,1
 80483d6:	75 02                	jne    80483da <register_tm_clones+0x1a>
 80483d8:	f3 c3                	repz ret 
 80483da:	ba 00 00 00 00       	mov    edx,0x0
 80483df:	85 d2                	test   edx,edx
 80483e1:	74 f5                	je     80483d8 <register_tm_clones+0x18>
 80483e3:	55                   	push   ebp
 80483e4:	89 e5                	mov    ebp,esp
 80483e6:	83 ec 18             	sub    esp,0x18
 80483e9:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80483ed:	c7 04 24 28 97 04 08 	mov    DWORD PTR [esp],0x8049728
 80483f4:	ff d2                	call   edx
 80483f6:	c9                   	leave  
 80483f7:	c3                   	ret    
 80483f8:	90                   	nop
 80483f9:	8d b4 26 00 00 00 00 	lea    esi,[esi+eiz*1+0x0]

08048400 <__do_global_dtors_aux>:
 8048400:	80 3d 28 97 04 08 00 	cmp    BYTE PTR ds:0x8049728,0x0
 8048407:	75 13                	jne    804841c <__do_global_dtors_aux+0x1c>
 8048409:	55                   	push   ebp
 804840a:	89 e5                	mov    ebp,esp
 804840c:	83 ec 08             	sub    esp,0x8
 804840f:	e8 7c ff ff ff       	call   8048390 <deregister_tm_clones>
 8048414:	c6 05 28 97 04 08 01 	mov    BYTE PTR ds:0x8049728,0x1
 804841b:	c9                   	leave  
 804841c:	f3 c3                	repz ret 
 804841e:	66 90                	xchg   ax,ax

08048420 <frame_dummy>:
 8048420:	a1 f0 95 04 08       	mov    eax,ds:0x80495f0
 8048425:	85 c0                	test   eax,eax
 8048427:	74 1e                	je     8048447 <frame_dummy+0x27>
 8048429:	b8 00 00 00 00       	mov    eax,0x0
 804842e:	85 c0                	test   eax,eax
 8048430:	74 15                	je     8048447 <frame_dummy+0x27>
 8048432:	55                   	push   ebp
 8048433:	89 e5                	mov    ebp,esp
 8048435:	83 ec 18             	sub    esp,0x18
 8048438:	c7 04 24 f0 95 04 08 	mov    DWORD PTR [esp],0x80495f0
 804843f:	ff d0                	call   eax
 8048441:	c9                   	leave  
 8048442:	e9 79 ff ff ff       	jmp    80483c0 <register_tm_clones>
 8048447:	e9 74 ff ff ff       	jmp    80483c0 <register_tm_clones>
 804844c:	0f 1f 40 00          	nop    DWORD PTR [eax+0x0]

08048450 <main>:
 8048450:	68 2c 97 04 08       	push   0x804972c
 8048455:	68 04 97 04 08       	push   0x8049704
 804845a:	e8 c1 fe ff ff       	call   8048320 <scanf@plt>
 804845f:	a1 2c 97 04 08       	mov    eax,ds:0x804972c
 8048464:	8b 1d 0b 97 04 08    	mov    ebx,DWORD PTR ds:0x804970b

0804846a <euqlid>:
 804846a:	31 d2                	xor    edx,edx
 804846c:	f7 f3                	div    ebx
 804846e:	89 d8                	mov    eax,ebx
 8048470:	89 d3                	mov    ebx,edx
 8048472:	81 fb 00 00 00 00    	cmp    ebx,0x0
 8048478:	75 f0                	jne    804846a <euqlid>
 804847a:	3b 05 0f 97 04 08    	cmp    eax,DWORD PTR ds:0x804970f
 8048480:	7d 0a                	jge    804848c <ok>
 8048482:	68 1d 97 04 08       	push   0x804971d
 8048487:	e9 05 00 00 00       	jmp    8048491 <prn>

0804848c <ok>:
 804848c:	68 13 97 04 08       	push   0x8049713

08048491 <prn>:
 8048491:	e8 7a fe ff ff       	call   8048310 <printf@plt>
 8048496:	68 00 00 00 00       	push   0x0
 804849b:	e8 a0 fe ff ff       	call   8048340 <exit@plt>

080484a0 <__libc_csu_init>:
 80484a0:	55                   	push   ebp
 80484a1:	57                   	push   edi
 80484a2:	31 ff                	xor    edi,edi
 80484a4:	56                   	push   esi
 80484a5:	53                   	push   ebx
 80484a6:	e8 d9 fe ff ff       	call   8048384 <__x86.get_pc_thunk.bx>
 80484ab:	81 c3 35 12 00 00    	add    ebx,0x1235
 80484b1:	83 ec 1c             	sub    esp,0x1c
 80484b4:	8b 6c 24 30          	mov    ebp,DWORD PTR [esp+0x30]
 80484b8:	8d b3 0c ff ff ff    	lea    esi,[ebx-0xf4]
 80484be:	e8 11 fe ff ff       	call   80482d4 <_init>
 80484c3:	8d 83 08 ff ff ff    	lea    eax,[ebx-0xf8]
 80484c9:	29 c6                	sub    esi,eax
 80484cb:	c1 fe 02             	sar    esi,0x2
 80484ce:	85 f6                	test   esi,esi
 80484d0:	74 27                	je     80484f9 <__libc_csu_init+0x59>
 80484d2:	8d b6 00 00 00 00    	lea    esi,[esi+0x0]
 80484d8:	8b 44 24 38          	mov    eax,DWORD PTR [esp+0x38]
 80484dc:	89 2c 24             	mov    DWORD PTR [esp],ebp
 80484df:	89 44 24 08          	mov    DWORD PTR [esp+0x8],eax
 80484e3:	8b 44 24 34          	mov    eax,DWORD PTR [esp+0x34]
 80484e7:	89 44 24 04          	mov    DWORD PTR [esp+0x4],eax
 80484eb:	ff 94 bb 08 ff ff ff 	call   DWORD PTR [ebx+edi*4-0xf8]
 80484f2:	83 c7 01             	add    edi,0x1
 80484f5:	39 f7                	cmp    edi,esi
 80484f7:	75 df                	jne    80484d8 <__libc_csu_init+0x38>
 80484f9:	83 c4 1c             	add    esp,0x1c
 80484fc:	5b                   	pop    ebx
 80484fd:	5e                   	pop    esi
 80484fe:	5f                   	pop    edi
 80484ff:	5d                   	pop    ebp
 8048500:	c3                   	ret    
 8048501:	eb 0d                	jmp    8048510 <__libc_csu_fini>
 8048503:	90                   	nop
 8048504:	90                   	nop
 8048505:	90                   	nop
 8048506:	90                   	nop
 8048507:	90                   	nop
 8048508:	90                   	nop
 8048509:	90                   	nop
 804850a:	90                   	nop
 804850b:	90                   	nop
 804850c:	90                   	nop
 804850d:	90                   	nop
 804850e:	90                   	nop
 804850f:	90                   	nop

08048510 <__libc_csu_fini>:
 8048510:	f3 c3                	repz ret 
 8048512:	66 90                	xchg   ax,ax

Disassembly of section .fini:

08048514 <_fini>:
 8048514:	53                   	push   ebx
 8048515:	83 ec 08             	sub    esp,0x8
 8048518:	e8 67 fe ff ff       	call   8048384 <__x86.get_pc_thunk.bx>
 804851d:	81 c3 c3 11 00 00    	add    ebx,0x11c3
 8048523:	83 c4 08             	add    esp,0x8
 8048526:	5b                   	pop    ebx
 8048527:	c3                   	ret    

Disassembly of section .rodata:

08048528 <_fp_hw>:
 8048528:	03 00                	add    eax,DWORD PTR [eax]
	...

0804852c <_IO_stdin_used>:
 804852c:	01 00                	add    DWORD PTR [eax],eax
 804852e:	02 00                	add    al,BYTE PTR [eax]

08048530 <__dso_handle>:
 8048530:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .eh_frame_hdr:

08048534 <.eh_frame_hdr>:
 8048534:	01 1b                	add    DWORD PTR [ebx],ebx
 8048536:	03 3b                	add    edi,DWORD PTR [ebx]
 8048538:	20 00                	and    BYTE PTR [eax],al
 804853a:	00 00                	add    BYTE PTR [eax],al
 804853c:	03 00                	add    eax,DWORD PTR [eax]
 804853e:	00 00                	add    BYTE PTR [eax],al
 8048540:	cc                   	int3   
 8048541:	fd                   	std    
 8048542:	ff                   	(bad)  
 8048543:	ff                   	(bad)  
 8048544:	3c 00                	cmp    al,0x0
 8048546:	00 00                	add    BYTE PTR [eax],al
 8048548:	6c                   	ins    BYTE PTR es:[edi],dx
 8048549:	ff                   	(bad)  
 804854a:	ff                   	(bad)  
 804854b:	ff 60 00             	jmp    DWORD PTR [eax+0x0]
 804854e:	00 00                	add    BYTE PTR [eax],al
 8048550:	dc ff                	fdivr  st(7),st
 8048552:	ff                   	(bad)  
 8048553:	ff                   	.byte 0xff
 8048554:	9c                   	pushf  
 8048555:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .eh_frame:

08048558 <__FRAME_END__-0x8c>:
 8048558:	14 00                	adc    al,0x0
 804855a:	00 00                	add    BYTE PTR [eax],al
 804855c:	00 00                	add    BYTE PTR [eax],al
 804855e:	00 00                	add    BYTE PTR [eax],al
 8048560:	01 7a 52             	add    DWORD PTR [edx+0x52],edi
 8048563:	00 01                	add    BYTE PTR [ecx],al
 8048565:	7c 08                	jl     804856f <__dso_handle+0x3f>
 8048567:	01 1b                	add    DWORD PTR [ebx],ebx
 8048569:	0c 04                	or     al,0x4
 804856b:	04 88                	add    al,0x88
 804856d:	01 00                	add    DWORD PTR [eax],eax
 804856f:	00 20                	add    BYTE PTR [eax],ah
 8048571:	00 00                	add    BYTE PTR [eax],al
 8048573:	00 1c 00             	add    BYTE PTR [eax+eax*1],bl
 8048576:	00 00                	add    BYTE PTR [eax],al
 8048578:	88 fd                	mov    ch,bh
 804857a:	ff                   	(bad)  
 804857b:	ff 60 00             	jmp    DWORD PTR [eax+0x0]
 804857e:	00 00                	add    BYTE PTR [eax],al
 8048580:	00 0e                	add    BYTE PTR [esi],cl
 8048582:	08 46 0e             	or     BYTE PTR [esi+0xe],al
 8048585:	0c 4a                	or     al,0x4a
 8048587:	0f 0b                	ud2    
 8048589:	74 04                	je     804858f <__dso_handle+0x5f>
 804858b:	78 00                	js     804858d <__dso_handle+0x5d>
 804858d:	3f                   	aas    
 804858e:	1a 3b                	sbb    bh,BYTE PTR [ebx]
 8048590:	2a 32                	sub    dh,BYTE PTR [edx]
 8048592:	24 22                	and    al,0x22
 8048594:	38 00                	cmp    BYTE PTR [eax],al
 8048596:	00 00                	add    BYTE PTR [eax],al
 8048598:	40                   	inc    eax
 8048599:	00 00                	add    BYTE PTR [eax],al
 804859b:	00 04 ff             	add    BYTE PTR [edi+edi*8],al
 804859e:	ff                   	(bad)  
 804859f:	ff 61 00             	jmp    DWORD PTR [ecx+0x0]
 80485a2:	00 00                	add    BYTE PTR [eax],al
 80485a4:	00 41 0e             	add    BYTE PTR [ecx+0xe],al
 80485a7:	08 85 02 41 0e 0c    	or     BYTE PTR [ebp+0xc0e4102],al
 80485ad:	87 03                	xchg   DWORD PTR [ebx],eax
 80485af:	43                   	inc    ebx
 80485b0:	0e                   	push   cs
 80485b1:	10 86 04 41 0e 14    	adc    BYTE PTR [esi+0x140e4104],al
 80485b7:	83 05 4e 0e 30 02 48 	add    DWORD PTR ds:0x2300e4e,0x48
 80485be:	0e                   	push   cs
 80485bf:	14 41                	adc    al,0x41
 80485c1:	c3                   	ret    
 80485c2:	0e                   	push   cs
 80485c3:	10 41 c6             	adc    BYTE PTR [ecx-0x3a],al
 80485c6:	0e                   	push   cs
 80485c7:	0c 41                	or     al,0x41
 80485c9:	c7                   	(bad)  
 80485ca:	0e                   	push   cs
 80485cb:	08 41 c5             	or     BYTE PTR [ecx-0x3b],al
 80485ce:	0e                   	push   cs
 80485cf:	04 10                	add    al,0x10
 80485d1:	00 00                	add    BYTE PTR [eax],al
 80485d3:	00 7c 00 00          	add    BYTE PTR [eax+eax*1+0x0],bh
 80485d7:	00 38                	add    BYTE PTR [eax],bh
 80485d9:	ff                   	(bad)  
 80485da:	ff                   	(bad)  
 80485db:	ff 02                	inc    DWORD PTR [edx]
 80485dd:	00 00                	add    BYTE PTR [eax],al
 80485df:	00 00                	add    BYTE PTR [eax],al
 80485e1:	00 00                	add    BYTE PTR [eax],al
	...

080485e4 <__FRAME_END__>:
 80485e4:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .init_array:

080495e8 <__frame_dummy_init_array_entry>:
 80495e8:	20                   	.byte 0x20
 80495e9:	84 04 08             	test   BYTE PTR [eax+ecx*1],al

Disassembly of section .fini_array:

080495ec <__do_global_dtors_aux_fini_array_entry>:
 80495ec:	00                   	.byte 0x0
 80495ed:	84 04 08             	test   BYTE PTR [eax+ecx*1],al

Disassembly of section .jcr:

080495f0 <__JCR_END__>:
 80495f0:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .dynamic:

080495f4 <_DYNAMIC>:
 80495f4:	01 00                	add    DWORD PTR [eax],eax
 80495f6:	00 00                	add    BYTE PTR [eax],al
 80495f8:	10 00                	adc    BYTE PTR [eax],al
 80495fa:	00 00                	add    BYTE PTR [eax],al
 80495fc:	0c 00                	or     al,0x0
 80495fe:	00 00                	add    BYTE PTR [eax],al
 8049600:	d4 82                	aam    0x82
 8049602:	04 08                	add    al,0x8
 8049604:	0d 00 00 00 14       	or     eax,0x14000000
 8049609:	85 04 08             	test   DWORD PTR [eax+ecx*1],eax
 804960c:	19 00                	sbb    DWORD PTR [eax],eax
 804960e:	00 00                	add    BYTE PTR [eax],al
 8049610:	e8 95 04 08 1b       	call   230c9aaa <_end+0x1b080372>
 8049615:	00 00                	add    BYTE PTR [eax],al
 8049617:	00 04 00             	add    BYTE PTR [eax+eax*1],al
 804961a:	00 00                	add    BYTE PTR [eax],al
 804961c:	1a 00                	sbb    al,BYTE PTR [eax]
 804961e:	00 00                	add    BYTE PTR [eax],al
 8049620:	ec                   	in     al,dx
 8049621:	95                   	xchg   ebp,eax
 8049622:	04 08                	add    al,0x8
 8049624:	1c 00                	sbb    al,0x0
 8049626:	00 00                	add    BYTE PTR [eax],al
 8049628:	04 00                	add    al,0x0
 804962a:	00 00                	add    BYTE PTR [eax],al
 804962c:	f5                   	cmc    
 804962d:	fe                   	(bad)  
 804962e:	ff 6f 8c             	jmp    FWORD PTR [edi-0x74]
 8049631:	81 04 08 05 00 00 00 	add    DWORD PTR [eax+ecx*1],0x5
 8049638:	1c 82                	sbb    al,0x82
 804963a:	04 08                	add    al,0x8
 804963c:	06                   	push   es
 804963d:	00 00                	add    BYTE PTR [eax],al
 804963f:	00 ac 81 04 08 0a 00 	add    BYTE PTR [ecx+eax*4+0xa0804],ch
 8049646:	00 00                	add    BYTE PTR [eax],al
 8049648:	57                   	push   edi
 8049649:	00 00                	add    BYTE PTR [eax],al
 804964b:	00 0b                	add    BYTE PTR [ebx],cl
 804964d:	00 00                	add    BYTE PTR [eax],al
 804964f:	00 10                	add    BYTE PTR [eax],dl
 8049651:	00 00                	add    BYTE PTR [eax],al
 8049653:	00 15 00 00 00 00    	add    BYTE PTR ds:0x0,dl
 8049659:	00 00                	add    BYTE PTR [eax],al
 804965b:	00 03                	add    BYTE PTR [ebx],al
 804965d:	00 00                	add    BYTE PTR [eax],al
 804965f:	00 e0                	add    al,ah
 8049661:	96                   	xchg   esi,eax
 8049662:	04 08                	add    al,0x8
 8049664:	02 00                	add    al,BYTE PTR [eax]
 8049666:	00 00                	add    BYTE PTR [eax],al
 8049668:	28 00                	sub    BYTE PTR [eax],al
 804966a:	00 00                	add    BYTE PTR [eax],al
 804966c:	14 00                	adc    al,0x0
 804966e:	00 00                	add    BYTE PTR [eax],al
 8049670:	11 00                	adc    DWORD PTR [eax],eax
 8049672:	00 00                	add    BYTE PTR [eax],al
 8049674:	17                   	pop    ss
 8049675:	00 00                	add    BYTE PTR [eax],al
 8049677:	00 ac 82 04 08 11 00 	add    BYTE PTR [edx+eax*4+0x110804],ch
 804967e:	00 00                	add    BYTE PTR [eax],al
 8049680:	a4                   	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
 8049681:	82                   	(bad)  
 8049682:	04 08                	add    al,0x8
 8049684:	12 00                	adc    al,BYTE PTR [eax]
 8049686:	00 00                	add    BYTE PTR [eax],al
 8049688:	08 00                	or     BYTE PTR [eax],al
 804968a:	00 00                	add    BYTE PTR [eax],al
 804968c:	13 00                	adc    eax,DWORD PTR [eax]
 804968e:	00 00                	add    BYTE PTR [eax],al
 8049690:	08 00                	or     BYTE PTR [eax],al
 8049692:	00 00                	add    BYTE PTR [eax],al
 8049694:	fe                   	(bad)  
 8049695:	ff                   	(bad)  
 8049696:	ff 6f 84             	jmp    FWORD PTR [edi-0x7c]
 8049699:	82                   	(bad)  
 804969a:	04 08                	add    al,0x8
 804969c:	ff                   	(bad)  
 804969d:	ff                   	(bad)  
 804969e:	ff 6f 01             	jmp    FWORD PTR [edi+0x1]
 80496a1:	00 00                	add    BYTE PTR [eax],al
 80496a3:	00 f0                	add    al,dh
 80496a5:	ff                   	(bad)  
 80496a6:	ff 6f 74             	jmp    FWORD PTR [edi+0x74]
 80496a9:	82                   	(bad)  
 80496aa:	04 08                	add    al,0x8
	...

Disassembly of section .got:

080496dc <.got>:
 80496dc:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .got.plt:

080496e0 <_GLOBAL_OFFSET_TABLE_>:
 80496e0:	f4                   	hlt    
 80496e1:	95                   	xchg   ebp,eax
 80496e2:	04 08                	add    al,0x8
	...
 80496ec:	16                   	push   ss
 80496ed:	83 04 08 26          	add    DWORD PTR [eax+ecx*1],0x26
 80496f1:	83 04 08 36          	add    DWORD PTR [eax+ecx*1],0x36
 80496f5:	83 04 08 46          	add    DWORD PTR [eax+ecx*1],0x46
 80496f9:	83 04 08 56          	add    DWORD PTR [eax+ecx*1],0x56
 80496fd:	83                   	.byte 0x83
 80496fe:	04 08                	add    al,0x8

Disassembly of section .data:

08049700 <__data_start>:
 8049700:	00 00                	add    BYTE PTR [eax],al
	...

08049704 <fmt>:
 8049704:	25 64 00 25 64       	and    eax,0x64250064

08049707 <out>:
 8049707:	25 64 0a 00 2e       	and    eax,0x2e000a64

0804970b <value>:
 804970b:	2e                   	cs
 804970c:	ca 07 00             	retf   0x7

0804970f <key>:
 804970f:	4d                   	dec    ebp
 8049710:	00 00                	add    BYTE PTR [eax],al
	...

08049713 <acc>:
 8049713:	41                   	inc    ecx
 8049714:	63 63 65             	arpl   WORD PTR [ebx+0x65],sp
 8049717:	70 74                	jo     804978d <_end+0x55>
 8049719:	65 64 21 00          	gs and DWORD PTR fs:gs:[eax],eax

0804971d <rej>:
 804971d:	52                   	push   edx
 804971e:	65                   	gs
 804971f:	6a 65                	push   0x65
 8049721:	63 74 65 64          	arpl   WORD PTR [ebp+eiz*2+0x64],si
 8049725:	21 00                	and    DWORD PTR [eax],eax
	...

Disassembly of section .bss:

08049728 <completed.5745>:
 8049728:	00 00                	add    BYTE PTR [eax],al
	...

0804972c <a>:
 804972c:	00 00                	add    BYTE PTR [eax],al
	...

08049730 <b>:
 8049730:	00 00                	add    BYTE PTR [eax],al
	...

08049734 <c>:
 8049734:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .stab:

00000000 <.stab>:
   0:	01 00                	add    DWORD PTR [eax],eax
   2:	00 00                	add    BYTE PTR [eax],al
   4:	00 00                	add    BYTE PTR [eax],al
   6:	15 00 0c 00 00       	adc    eax,0xc00
   b:	00 01                	add    BYTE PTR [ecx],al
   d:	00 00                	add    BYTE PTR [eax],al
   f:	00 64 00 00          	add    BYTE PTR [eax+eax*1+0x0],ah
  13:	00 50 84             	add    BYTE PTR [eax-0x7c],dl
  16:	04 08                	add    al,0x8
  18:	00 00                	add    BYTE PTR [eax],al
  1a:	00 00                	add    BYTE PTR [eax],al
  1c:	44                   	inc    esp
  1d:	00 08                	add    BYTE PTR [eax],cl
  1f:	00 50 84             	add    BYTE PTR [eax-0x7c],dl
  22:	04 08                	add    al,0x8
  24:	00 00                	add    BYTE PTR [eax],al
  26:	00 00                	add    BYTE PTR [eax],al
  28:	44                   	inc    esp
  29:	00 09                	add    BYTE PTR [ecx],cl
  2b:	00 55 84             	add    BYTE PTR [ebp-0x7c],dl
  2e:	04 08                	add    al,0x8
  30:	00 00                	add    BYTE PTR [eax],al
  32:	00 00                	add    BYTE PTR [eax],al
  34:	44                   	inc    esp
  35:	00 0a                	add    BYTE PTR [edx],cl
  37:	00 5a 84             	add    BYTE PTR [edx-0x7c],bl
  3a:	04 08                	add    al,0x8
  3c:	00 00                	add    BYTE PTR [eax],al
  3e:	00 00                	add    BYTE PTR [eax],al
  40:	44                   	inc    esp
  41:	00 0b                	add    BYTE PTR [ebx],cl
  43:	00 5f 84             	add    BYTE PTR [edi-0x7c],bl
  46:	04 08                	add    al,0x8
  48:	00 00                	add    BYTE PTR [eax],al
  4a:	00 00                	add    BYTE PTR [eax],al
  4c:	44                   	inc    esp
  4d:	00 0c 00             	add    BYTE PTR [eax+eax*1],cl
  50:	64 84 04 08          	test   BYTE PTR fs:[eax+ecx*1],al
  54:	00 00                	add    BYTE PTR [eax],al
  56:	00 00                	add    BYTE PTR [eax],al
  58:	44                   	inc    esp
  59:	00 0e                	add    BYTE PTR [esi],cl
  5b:	00 6a 84             	add    BYTE PTR [edx-0x7c],ch
  5e:	04 08                	add    al,0x8
  60:	00 00                	add    BYTE PTR [eax],al
  62:	00 00                	add    BYTE PTR [eax],al
  64:	44                   	inc    esp
  65:	00 0f                	add    BYTE PTR [edi],cl
  67:	00 6c 84 04          	add    BYTE PTR [esp+eax*4+0x4],ch
  6b:	08 00                	or     BYTE PTR [eax],al
  6d:	00 00                	add    BYTE PTR [eax],al
  6f:	00 44 00 10          	add    BYTE PTR [eax+eax*1+0x10],al
  73:	00 6e 84             	add    BYTE PTR [esi-0x7c],ch
  76:	04 08                	add    al,0x8
  78:	00 00                	add    BYTE PTR [eax],al
  7a:	00 00                	add    BYTE PTR [eax],al
  7c:	44                   	inc    esp
  7d:	00 11                	add    BYTE PTR [ecx],dl
  7f:	00 70 84             	add    BYTE PTR [eax-0x7c],dh
  82:	04 08                	add    al,0x8
  84:	00 00                	add    BYTE PTR [eax],al
  86:	00 00                	add    BYTE PTR [eax],al
  88:	44                   	inc    esp
  89:	00 12                	add    BYTE PTR [edx],dl
  8b:	00 72 84             	add    BYTE PTR [edx-0x7c],dh
  8e:	04 08                	add    al,0x8
  90:	00 00                	add    BYTE PTR [eax],al
  92:	00 00                	add    BYTE PTR [eax],al
  94:	44                   	inc    esp
  95:	00 13                	add    BYTE PTR [ebx],dl
  97:	00 78 84             	add    BYTE PTR [eax-0x7c],bh
  9a:	04 08                	add    al,0x8
  9c:	00 00                	add    BYTE PTR [eax],al
  9e:	00 00                	add    BYTE PTR [eax],al
  a0:	44                   	inc    esp
  a1:	00 14 00             	add    BYTE PTR [eax+eax*1],dl
  a4:	7a 84                	jp     2a <_init-0x80482aa>
  a6:	04 08                	add    al,0x8
  a8:	00 00                	add    BYTE PTR [eax],al
  aa:	00 00                	add    BYTE PTR [eax],al
  ac:	44                   	inc    esp
  ad:	00 15 00 80 84 04    	add    BYTE PTR ds:0x4848000,dl
  b3:	08 00                	or     BYTE PTR [eax],al
  b5:	00 00                	add    BYTE PTR [eax],al
  b7:	00 44 00 16          	add    BYTE PTR [eax+eax*1+0x16],al
  bb:	00 82 84 04 08 00    	add    BYTE PTR [edx+0x80484],al
  c1:	00 00                	add    BYTE PTR [eax],al
  c3:	00 44 00 17          	add    BYTE PTR [eax+eax*1+0x17],al
  c7:	00 87 84 04 08 00    	add    BYTE PTR [edi+0x80484],al
  cd:	00 00                	add    BYTE PTR [eax],al
  cf:	00 44 00 19          	add    BYTE PTR [eax+eax*1+0x19],al
  d3:	00 8c 84 04 08 00 00 	add    BYTE PTR [esp+eax*4+0x804],cl
  da:	00 00                	add    BYTE PTR [eax],al
  dc:	44                   	inc    esp
  dd:	00 1b                	add    BYTE PTR [ebx],bl
  df:	00 91 84 04 08 00    	add    BYTE PTR [ecx+0x80484],dl
  e5:	00 00                	add    BYTE PTR [eax],al
  e7:	00 44 00 1c          	add    BYTE PTR [eax+eax*1+0x1c],al
  eb:	00 96 84 04 08 00    	add    BYTE PTR [esi+0x80484],dl
  f1:	00 00                	add    BYTE PTR [eax],al
  f3:	00 44 00 1d          	add    BYTE PTR [eax+eax*1+0x1d],al
  f7:	00 9b 84 04 08 00    	add    BYTE PTR [ebx+0x80484],bl
  fd:	00 00                	add    BYTE PTR [eax],al
  ff:	00 64 00 00          	add    BYTE PTR [eax+eax*1+0x0],ah
 103:	00 00                	add    BYTE PTR [eax],al
 105:	00 00                	add    BYTE PTR [eax],al
	...

Disassembly of section .stabstr:

00000000 <.stabstr>:
   0:	00 66 6c             	add    BYTE PTR [esi+0x6c],ah
   3:	79 72                	jns    77 <_init-0x804825d>
   5:	61                   	popa   
   6:	74 2e                	je     36 <_init-0x804829e>
   8:	61                   	popa   
   9:	73 6d                	jae    78 <_init-0x804825c>
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    edi
   1:	43                   	inc    ebx
   2:	43                   	inc    ebx
   3:	3a 20                	cmp    ah,BYTE PTR [eax]
   5:	28 47 4e             	sub    BYTE PTR [edi+0x4e],al
   8:	55                   	push   ebp
   9:	29 20                	sub    DWORD PTR [eax],esp
   b:	34 2e                	xor    al,0x2e
   d:	37                   	aaa    
   e:	2e 32 20             	xor    ah,BYTE PTR cs:[eax]
  11:	32 30                	xor    dh,BYTE PTR [eax]
  13:	31 32                	xor    DWORD PTR [edx],esi
  15:	30 39                	xor    BYTE PTR [ecx],bh
  17:	32 31                	xor    dh,BYTE PTR [ecx]
  19:	20 28                	and    BYTE PTR [eax],ch
  1b:	52                   	push   edx
  1c:	65 64 20 48 61       	gs and BYTE PTR fs:gs:[eax+0x61],cl
  21:	74 20                	je     43 <_init-0x8048291>
  23:	34 2e                	xor    al,0x2e
  25:	37                   	aaa    
  26:	2e                   	cs
  27:	32                   	.byte 0x32
  28:	2d                   	.byte 0x2d
  29:	32 29                	xor    ch,BYTE PTR [ecx]
	...
